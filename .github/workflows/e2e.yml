name: E2E Deployment

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'Image tag to deploy (defaults to "test")'
        required: false
        default: "test"

env:
  ACR_NAME: devopsaziz2
  AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  IMAGE_NAME: hotel_service

jobs:
  deploy-e2e:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Azure CLI
        uses: azure/cli@v2

      - name: AKS Get Credentials
        run: az aks get-credentials --resource-group $AKS_RESOURCE_GROUP --name $AKS_CLUSTER_NAME --overwrite-existing

      - name: Deploy to AKS (E2E Environment)
        run: |
          IMAGE_TO_DEPLOY="${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.event.inputs.image-tag }}"
          echo "Deploying image: $IMAGE_TO_DEPLOY"
          
          sed -i "s|image:.*|image: $IMAGE_TO_DEPLOY|" k8s/deployment.yaml
          
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for deployment
        run: kubectl rollout status deployment/hotel-service-deployment --timeout=120s

      - name: Smoke Test
        run: |
          kubectl get svc
          curl -f http://$(kubectl get svc hotel-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')/api/products || exit 1

      - name: Load Test
        uses: grafana/k6-action@v0.2.0
        with:
          filename: k8s/loadtest.js

      - name: Export Performance Report
        run: |
          mkdir -p reports
          cp k8s/loadtest-result.json reports/