name: Build and Deploy HotelService to Azure

on:
  push:
    branches: [ master ]
    paths:
      - '**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  ACR_NAME: devopsaziz2
  IMAGE_NAME: hotel_service
  TEST_ENV: "test"
  APP_URL: https://hotelservice.niceocean-6b010897.westus2.azurecontainerapps.io


jobs:

  docker-build-push:
    name: Build JAR, Build and Push Docker Image
    runs-on: self-hosted
    env:
      ACR_USERNAME: ${{ secrets.HOTELSERVICE_REGISTRY_USERNAME }}
      ACR_PASSWORD: ${{ secrets.HOTELSERVICE_REGISTRY_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build the JAR with Maven
        run: mvn clean package -DskipTests --no-transfer-progress

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TEST_ENV }}
    

  deploy-test:
    name: Deploy to Test Environment
    needs: docker-build-push
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    env:
      CONTAINER_APP_NAME: hotelservice
      RESOURCE_GROUP: devops-rg
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.HOTELSERVICE_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.HOTELSERVICE_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.HOTELSERVICE_AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v2
        with:
          registryUrl: ${{ env.ACR_NAME }}.azurecr.io
          registryUsername: ${{ secrets.HOTELSERVICE_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.HOTELSERVICE_REGISTRY_PASSWORD }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TEST_ENV }}


  load-tests:
    name: Run k6 Load Tests
    needs: deploy-test
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download and Install k6
        run: |
          Invoke-WebRequest -Uri https://github.com/grafana/k6/releases/download/v0.48.0/k6-v0.48.0-windows-amd64.zip -OutFile k6.zip
          Expand-Archive .\k6.zip -DestinationPath .
          $env:PATH += ";$PWD\k6-v0.48.0-windows-amd64"
        shell: pwsh

      - name: Run k6 load test
        run: |
          $env:APP_URL = ${{ env.APP_URL }}
          .\k6-v0.48.0-windows-amd64\k6.exe run github\tests\loadtest.js --vus 10 --duration 30s
        shell: pwsh